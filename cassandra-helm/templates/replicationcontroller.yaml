apiVersion: v1
kind: ReplicationController
metadata:
  name: {{ template "cassandra.fullname" . }}
  labels:
    app: {{ template "cassandra.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "cassandra.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.config.cluster_size }}
  template:
    metadata:
      labels:
        app: {{ template "cassandra.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - command:
            - /run.sh
          resources:
            limits:
              cpu: 0.5
        - name: {{ template "cassandra.fullname" . }}
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
  {{- if .Values.commandOverrides }}
          command: {{ .Values.commandOverrides }}
  {{- end }}
  {{- if .Values.argsOverrides }}
          args: {{ .Values.argsOverrides }}
  {{- end }}
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          env:
          {{- $seed_size := default 1 .Values.config.seed_size | int -}}
          {{- $global := . }}
          - name: CASSANDRA_SEEDS
            {{- if .Values.hostNetwork }}
            value: {{ required "You must fill \".Values.config.seeds\" with list of Cassandra seeds when hostNetwork is set to true" .Values.config.seeds | quote }}
            {{- else }}
            value: "{{- range $i, $e := until $seed_size }}{{ template "cassandra.fullname" $global }}-{{ $i }}.{{ template "cassandra.fullname" $global }}.{{ $global.Release.Namespace }}.svc.{{ $global.Values.config.cluster_domain }}{{- if (lt ( add1 $i ) $seed_size ) }},{{- end }}{{- end }}"
            {{- end }}
          - name: MAX_HEAP_SIZE
            value: {{ default "8192M" .Values.config.max_heap_size | quote }}
          - name: HEAP_NEWSIZE
            value: {{ default "200M" .Values.config.heap_new_size | quote }}
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: {{ default "SimpleSnitch" .Values.config.endpoint_snitch | quote }}
          - name: CASSANDRA_CLUSTER_NAME
            value: {{ default "Cassandra" .Values.config.cluster_name | quote }}
          - name: CASSANDRA_DC
            value: {{ default "DC1" .Values.config.dc_name | quote }}
          - name: CASSANDRA_RACK
            value: {{ default "RAC1" .Values.config.rack_name | quote }}
          - name: CASSANDRA_START_RPC
            value: {{ default "false" .Values.config.start_rpc | quote }}
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
          livenessProbe:
            exec:
              command: [ "/bin/sh", "-c", "nodetool status" ]
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command: [ "/bin/sh", "-c", "nodetool status | grep -E \"^UN\\s+{{ .Values.readinessProbe.address }}\"" ]
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          ports:
          - name: intra
            containerPort: 7000
          - name: tls
            containerPort: 7001
          - name: jmx
            containerPort: 7199
          - name: cql
            containerPort: {{ default 9042 .Values.config.ports.cql }}
          - name: thrift
            containerPort: {{ default 9160 .Values.config.ports.thrift }}
          {{- if .Values.config.ports.agent }}
          - name: agent
            containerPort: {{ .Values.config.ports.agent }}
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /var/lib/cassandra
      volumes:
        - name: data
          emptyDir: {}

